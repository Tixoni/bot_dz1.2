from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.database import create_table, add_homework, get_all_homework, delete_homework,delete_old_homework


router = Router()  # router = Dispatcher

create_table()#–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 


class Add(StatesGroup):
    date = State()
    subject = State()
    home_work = State()

    delete_homework_date = State()
    delete_homework_subject = State()




@router.message(Command("start"))
async def cmd_start(message: Message):
    kb = [
        [KeyboardButton(text="/list")],
        [KeyboardButton(text="/add")]
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=kb,resize_keyboard=True)
    await message.answer("–Ø –±–æ—Ç —Å –î–ó. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ /add –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è –∏ /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –¥–∑.", reply_markup=keyboard)

@router.message(Command("list"))
async def list_homework(message: Message, state: FSMContext):
    homework_list = get_all_homework()

    if not homework_list:
        await message.answer("üì≠ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –Ω–µ—Ç!")
        return

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì) –∏ –∑–∞—Ç–µ–º –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É
    homework_list.sort(key=lambda hw: (hw[0].split('.')[::-1], hw[1]))

    hlist = "üìå <b>–ê–∫—Ç—É–∞–ª—å–Ω–æ–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ:</b>\n\n"

    for hw in homework_list:
        hw_date, subject, task = hw  # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∫–æ—Ä—Ç–µ–∂ (–î–∞—Ç–∞, –ü—Ä–µ–¥–º–µ—Ç, –ó–∞–¥–∞–Ω–∏–µ)
        hlist += f"üìÖ <b>{hw_date}</b>\nüìñ <b>{subject}</b>\nüìù {task}\n\n"

    await message.answer(hlist, parse_mode="HTML")


#----------------------------------------------------/delete--------------------------------------------------------------------------------------------

@router.message(Command("delete"))
async def delete(message: Message, state: FSMContext):
    global homework_date, homework_subject
    await state.set_state(Add.delete_homework_date)
    msg = await message.answer("üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 05.11.2025):")
    await state.update_data(bot_id=msg.message_id)

@router.message(Add.delete_homework_date)
async def delete_date(message: Message, state: FSMContext):
    global homework_date
    data = await state.get_data()
    bot_id = data.get("bot_id")
    user_id = message.message_id

    homework_date = message.text
    await state.set_state(Add.delete_homework_subject)
    msg = await message.answer("üìñ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:")#
    await state.update_data(bot_id=msg.message_id)

    await message.bot.delete_message(chat_id=message.chat.id, message_id=bot_id) # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    await message.bot.delete_message(chat_id=message.chat.id, message_id=user_id) # —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —é–∑–µ—Ä–∞

@router.message(Add.delete_homework_subject)
async def delete_homework_entry(message: Message, state: FSMContext):
    
    homework_subject = message.text
    delete_homework(homework_date, homework_subject)  # –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –î–ó
    
    await message.answer("‚úÖ –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ.")
    await state.clear()




#---------------------------------------------------/add----------------------------------------------------------------------------------------------------

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
def get_subject_keyboard():
    subjects = ["–ú–∞—Ç–∞–Ω", "–õ–∏–Ω–∞–ª", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–°–∏–ê–û–î", "–ò–ò", "–û–û–ü", "–§–∏–∑–∏–∫–∞",
    "–ò—Å—Ç–æ—Ä–∏—è", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π 1 –≥—Ä—É–ø.", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π 2 –≥—Ä—É–ø.", "–†—É—Å–∫–∏–π","–ü—Ä–∞–≤–æ–≤–µ–¥–µ–Ω–∏–µ"]
    
    builder = InlineKeyboardBuilder()
    for subject in subjects:
        builder.button(text=subject, callback_data=f"subject_{subject}")
    builder.adjust(2)  # –î–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
    return builder.as_markup()



# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã
@router.message(Command("add"))
async def add(message: Message, state: FSMContext):
    delete_old_homework() #—É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –¥–∑
    await state.set_state(Add.date)
    msg = await message.answer("üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 05.11.2025):")
    await state.update_data(bot_id=msg.message_id)


@router.message(Add.date)
async def add_date(message: Message, state: FSMContext):
    data = await state.get_data()
    bot_id = data.get("bot_id")
    user_id = message.message_id

    await state.update_data(date=message.text)
    await state.set_state(Add.subject)

    msg = await message.answer("üìñ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:", reply_markup=get_subject_keyboard())
    await state.update_data(bot_id=msg.message_id)

    await message.bot.delete_message(chat_id=message.chat.id, message_id=bot_id) #—É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    await message.bot.delete_message(chat_id=message.chat.id, message_id=user_id)#—É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —é–∑–µ—Ä–∞

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É - –≤—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ 
@router.callback_query(lambda c: c.data.startswith("subject_"))
async def subject_selected(callback: CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ callback_data
    subject = callback.data.replace("subject_", "")  # –ù–∞–ø—Ä–∏–º–µ—Ä, "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    bot_id = data.get("bot_id")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(subject=subject)
    await state.set_state(Add.home_work)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–º, –∫–∞–∫ –Ω–∞ –∫–Ω–æ–ø–∫–µ
    await callback.message.answer(f"üìñ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç: {subject}")

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ (—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π)
    try:
        await callback.message.bot.delete_message(chat_id=callback.message.chat.id, message_id=bot_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    try:
        await callback.message.delete()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤–≤–æ–¥ –∑–∞–¥–∞–Ω–∏—è
    msg = await callback.message.answer("üìù –í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ:")
    await state.update_data(bot_id=msg.message_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∑–∞–¥–∞–Ω–∏—è
@router.message(Add.home_work)
async def add_home_work(message: Message, state: FSMContext):
    data = await state.get_data()
    bot_id = data.get("bot_id")
    user_id = message.message_id

    date = data.get("date")
    subject = data.get("subject")
    homework = message.text

    add_homework(date, subject, homework)

    await message.bot.delete_message(chat_id=message.chat.id, message_id=bot_id)
    await message.bot.delete_message(chat_id=message.chat.id, message_id=user_id)

    await message.answer(f"‚úÖ –î–ó –¥–æ–±–∞–≤–ª–µ–Ω–æ!\n\nüìÖ –î–∞—Ç–∞: {date}\nüìñ –ü—Ä–µ–¥–º–µ—Ç: {subject}\nüìù –ó–∞–¥–∞–Ω–∏–µ: {homework}")
    await state.clear()

